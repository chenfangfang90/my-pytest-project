{"name": "测试数据：【0，True，0，获取成功】", "status": "failed", "statusDetails": {"message": "AssertionError: 返回消息msg校验失败\nassert '获取成功' in ''", "trace": "self = <test_get_car_check_project_list.TestGetCarCheckProjectList object at 0x104500ee0>\nproject_type = '0', except_result = True, except_code = 0, except_msg = '获取成功'\n\n    @allure.story('用例--获取验车项目列表')\n    @allure.description('该用例是针对验车项目列表测试')\n    @allure.title('测试数据：【{project_type}，{except_result}，{except_code}，{except_msg}】')\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"project_type, except_result, except_code, except_msg\",\n                             api_data[\"test_get_car_check_project_list\"])\n    def test_get_car_check_project_list(self, project_type, except_result, except_code, except_msg):\n        with allure.step(\"初始化日志和测试数据\"):\n            logger.info('##################### 开始执行用例 #################')\n            allure.attach(\n                f\"测试数据：project_type={project_type}, 预期结果={except_result}, 预期code={except_code}, 预期msg={except_msg}\",\n                name=\"测试参数\",\n                attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"发送请求并获取响应\"):\n            result = test_get_check_project_list(project_type)\n            # 将请求的URL和响应结果附加到报告中\n            allure.attach(f\"请求URL: {result.response.url}\", name=\"请求URL\",\n                          attachment_type=allure.attachment_type.TEXT)\n            allure.attach(f\"响应状态码: {result.response.status_code}\", name=\"状态码\",\n                          attachment_type=allure.attachment_type.TEXT)\n            allure.attach(str(result.response.json()), name=\"完整响应数据\", attachment_type=allure.attachment_type.JSON)\n    \n        # step_1(project_type)  # 原有的步骤1\n    \n        with allure.step(\"验证业务状态码\"):\n            assert result.success == except_result, f\"业务状态校验失败，错误信息: {result.error}\"\n            allure.attach(f\"预期业务状态: {except_result}, 实际业务状态: {result.success}\",\n                          name=\"业务状态验证结果\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"验证HTTP状态码\"):\n            assert result.response.status_code == 200, \"HTTP状态码校验失败\"\n            allure.attach(f\"实际HTTP状态码: {result.response.status_code}\",\n                          name=\"HTTP状态码验证结果\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"验证返回码code\"):\n            actual_code = result.response.json().get(\"code\")\n            assert actual_code == except_code, \"返回码code校验失败\"\n            allure.attach(f\"预期code: {except_code}, 实际code: {actual_code}\",\n                          name=\"code验证结果\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"验证返回消息（可选）\"):\n            if except_msg:\n                actual_msg = result.response.json().get(\"msg\", \"\")\n>               assert except_msg in actual_msg, \"返回消息msg校验失败\"\nE               AssertionError: 返回消息msg校验失败\nE               assert '获取成功' in ''\n\ntest_get_car_check_project_list.py:64: AssertionError"}, "description": "该用例是针对验车项目列表测试", "steps": [{"name": "初始化日志和测试数据", "status": "passed", "attachments": [{"name": "测试参数", "source": "6363d2e6-8b4d-433a-96f4-f7cc1f5d27e3-attachment.txt", "type": "text/plain"}], "start": 1743037346139, "stop": 1743037346139}, {"name": "发送请求并获取响应", "status": "passed", "attachments": [{"name": "请求URL", "source": "938b6aa0-c17d-4ec0-bd23-196f5b25ae91-attachment.txt", "type": "text/plain"}, {"name": "状态码", "source": "987dbecb-8674-46f2-8632-9417399ffc06-attachment.txt", "type": "text/plain"}, {"name": "完整响应数据", "source": "16f54cf4-a0a8-43f5-9497-618ed124886b-attachment.json", "type": "application/json"}], "start": 1743037346139, "stop": 1743037346324}, {"name": "验证业务状态码", "status": "passed", "attachments": [{"name": "业务状态验证结果", "source": "729bcae7-30e6-49c9-8526-8246cebb08c3-attachment.txt", "type": "text/plain"}], "start": 1743037346324, "stop": 1743037346324}, {"name": "验证HTTP状态码", "status": "passed", "attachments": [{"name": "HTTP状态码验证结果", "source": "2a272b8d-1881-42a1-9f0e-65f9e3d39e53-attachment.txt", "type": "text/plain"}], "start": 1743037346324, "stop": 1743037346324}, {"name": "验证返回码code", "status": "passed", "attachments": [{"name": "code验证结果", "source": "63cc1eea-0a0f-48aa-933e-44bb009021a4-attachment.txt", "type": "text/plain"}], "start": 1743037346324, "stop": 1743037346325}, {"name": "验证返回消息（可选）", "status": "failed", "statusDetails": {"message": "AssertionError: 返回消息msg校验失败\nassert '获取成功' in ''\n", "trace": "  File \"/Users/yangfeng/Desktop/pytest/test-demo/testcases/test_get_car_check_project_list.py\", line 64, in test_get_car_check_project_list\n    assert except_msg in actual_msg, \"返回消息msg校验失败\"\n"}, "start": 1743037346325, "stop": 1743037346325}], "attachments": [{"name": "log", "source": "a5d49791-cf7e-4654-9ab1-f13608258272-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "bd741a1d-7f65-441f-93cc-a098e2af1439-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "project_type", "value": "'0'"}, {"name": "except_result", "value": "True"}, {"name": "except_code", "value": "0"}, {"name": "except_msg", "value": "'获取成功'"}], "start": 1743037346139, "stop": 1743037346325, "uuid": "5030a2b0-2f67-4d89-b679-437219c19774", "historyId": "a9e90e177412af8be8ef5c341ef17546", "testCaseId": "87b0d5ce3aef7b6c40b6b25b4bdf3daf", "fullName": "testcases.test_get_car_check_project_list.TestGetCarCheckProjectList#test_get_car_check_project_list", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "获取验车项目列表"}, {"name": "story", "value": "用例--获取验车项目列表"}, {"name": "epic", "value": "针对单个接口测试"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_get_car_check_project_list"}, {"name": "subSuite", "value": "TestGetCarCheckProjectList"}, {"name": "host", "value": "yangfengs-MacBook-Pro.local"}, {"name": "thread", "value": "15682-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_get_car_check_project_list"}]}