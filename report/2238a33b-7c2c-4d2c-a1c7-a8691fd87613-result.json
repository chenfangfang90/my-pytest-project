{"name": "测试数据：【 0，True，0，获取成功】", "status": "broken", "statusDetails": {"message": "AttributeError: 'ResultBase' object has no attribute 'error'", "trace": "self = <test_get_car_check_project_list.TestGetCarCheckProjectList object at 0x103fcf130>, project_type = '0', except_result = True, except_code = 0\nexcept_msg = '获取成功'\n\n    @allure.story('用例--获取验车项目列表')\n    @allure.description('该用例是针对验车项目列表测试')\n    @allure.title('测试数据：【 {project_type}，{except_result}，{except_code}，{except_msg}】')\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"project_type, except_result, except_code, except_msg\",\n                             api_data[\"test_get_car_check_project_list\"])\n    def test_get_car_check_project_list(self, project_type, except_result, except_code, except_msg):\n        logger.info('##################### 开始执行用例 #################')\n    \n        # 执行接口调用\n        with allure.step(\"调用接口获取验车项目列表\"):\n            result = get_check_project_list(project_type)\n            step_1(project_type)  # 嵌套步骤\n    \n            # 附加响应结果到Allure报告\n            allure.attach(\n                name=\"接口响应结果\",\n                body=str(result.response.json()),\n                attachment_type=allure.attachment_type.JSON\n            )\n    \n            logger.debug(\"接口响应内容：{}\".format(result.response.text))\n    \n        # 添加断言步骤\n        with allure.step(\"验证接口响应\"):\n>           assert result.success == except_result, f\"实际结果与预期不符: {result.error}\"\nE           AttributeError: 'ResultBase' object has no attribute 'error'\n\ntestcases/test_get_car_check_project_list.py:45: AttributeError"}, "description": "该用例是针对验车项目列表测试", "steps": [{"name": "调用接口获取验车项目列表", "status": "passed", "steps": [{"name": "步骤1===>> 获取验车数据，验车类型='0'", "status": "passed", "parameters": [{"name": "project_type", "value": "'0'"}], "start": 1743042800978, "stop": 1743042800978}], "attachments": [{"name": "接口响应结果", "source": "0224b5bf-2b02-4607-8ed5-9a3a4213916b-attachment.json", "type": "application/json"}], "start": 1743042800789, "stop": 1743042800992}, {"name": "验证接口响应", "status": "broken", "statusDetails": {"message": "AttributeError: 'ResultBase' object has no attribute 'error'\n", "trace": "  File \"/Users/yangfeng/Desktop/pytest/test-demo/testcases/test_get_car_check_project_list.py\", line 45, in test_get_car_check_project_list\n    assert result.success == except_result, f\"实际结果与预期不符: {result.error}\"\n"}, "start": 1743042800992, "stop": 1743042800992}], "attachments": [{"name": "log", "source": "3f206516-75d6-48ba-9d01-b995b5de7e78-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "project_type", "value": "'0'"}, {"name": "except_result", "value": "True"}, {"name": "except_code", "value": "0"}, {"name": "except_msg", "value": "'获取成功'"}], "start": 1743042800788, "stop": 1743042800992, "uuid": "40e5ae2d-bd27-4615-a9d9-94e9446f30c7", "historyId": "a9e90e177412af8be8ef5c341ef17546", "testCaseId": "87b0d5ce3aef7b6c40b6b25b4bdf3daf", "fullName": "testcases.test_get_car_check_project_list.TestGetCarCheckProjectList#test_get_car_check_project_list", "labels": [{"name": "epic", "value": "针对单个接口测试"}, {"name": "story", "value": "用例--获取验车项目列表"}, {"name": "feature", "value": "获取验车项目列表"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_get_car_check_project_list"}, {"name": "subSuite", "value": "TestGetCarCheckProjectList"}, {"name": "host", "value": "yangfengs-MacBook-Pro.local"}, {"name": "thread", "value": "22437-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_get_car_check_project_list"}]}