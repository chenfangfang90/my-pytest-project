{"uid":"aa95125b7542d49f","name":"测试数据：【 0，True，0，获取成功】","fullName":"testcases.test_get_car_check_project_list.TestGetCarCheckProjectList#test_get_car_check_project_list","historyId":"a9e90e177412af8be8ef5c341ef17546","time":{"start":1743042800788,"stop":1743042800992,"duration":204},"description":"该用例是针对验车项目列表测试","descriptionHtml":"<p>该用例是针对验车项目列表测试</p>\n","status":"broken","statusMessage":"AttributeError: 'ResultBase' object has no attribute 'error'","statusTrace":"self = <test_get_car_check_project_list.TestGetCarCheckProjectList object at 0x103fcf130>, project_type = '0', except_result = True, except_code = 0\nexcept_msg = '获取成功'\n\n    @allure.story('用例--获取验车项目列表')\n    @allure.description('该用例是针对验车项目列表测试')\n    @allure.title('测试数据：【 {project_type}，{except_result}，{except_code}，{except_msg}】')\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"project_type, except_result, except_code, except_msg\",\n                             api_data[\"test_get_car_check_project_list\"])\n    def test_get_car_check_project_list(self, project_type, except_result, except_code, except_msg):\n        logger.info('##################### 开始执行用例 #################')\n    \n        # 执行接口调用\n        with allure.step(\"调用接口获取验车项目列表\"):\n            result = get_check_project_list(project_type)\n            step_1(project_type)  # 嵌套步骤\n    \n            # 附加响应结果到Allure报告\n            allure.attach(\n                name=\"接口响应结果\",\n                body=str(result.response.json()),\n                attachment_type=allure.attachment_type.JSON\n            )\n    \n            logger.debug(\"接口响应内容：{}\".format(result.response.text))\n    \n        # 添加断言步骤\n        with allure.step(\"验证接口响应\"):\n>           assert result.success == except_result, f\"实际结果与预期不符: {result.error}\"\nE           AttributeError: 'ResultBase' object has no attribute 'error'\n\ntestcases/test_get_car_check_project_list.py:45: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"该用例是针对验车项目列表测试","status":"broken","statusMessage":"AttributeError: 'ResultBase' object has no attribute 'error'","statusTrace":"self = <test_get_car_check_project_list.TestGetCarCheckProjectList object at 0x103fcf130>, project_type = '0', except_result = True, except_code = 0\nexcept_msg = '获取成功'\n\n    @allure.story('用例--获取验车项目列表')\n    @allure.description('该用例是针对验车项目列表测试')\n    @allure.title('测试数据：【 {project_type}，{except_result}，{except_code}，{except_msg}】')\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"project_type, except_result, except_code, except_msg\",\n                             api_data[\"test_get_car_check_project_list\"])\n    def test_get_car_check_project_list(self, project_type, except_result, except_code, except_msg):\n        logger.info('##################### 开始执行用例 #################')\n    \n        # 执行接口调用\n        with allure.step(\"调用接口获取验车项目列表\"):\n            result = get_check_project_list(project_type)\n            step_1(project_type)  # 嵌套步骤\n    \n            # 附加响应结果到Allure报告\n            allure.attach(\n                name=\"接口响应结果\",\n                body=str(result.response.json()),\n                attachment_type=allure.attachment_type.JSON\n            )\n    \n            logger.debug(\"接口响应内容：{}\".format(result.response.text))\n    \n        # 添加断言步骤\n        with allure.step(\"验证接口响应\"):\n>           assert result.success == except_result, f\"实际结果与预期不符: {result.error}\"\nE           AttributeError: 'ResultBase' object has no attribute 'error'\n\ntestcases/test_get_car_check_project_list.py:45: AttributeError","steps":[{"name":"调用接口获取验车项目列表","time":{"start":1743042800789,"stop":1743042800992,"duration":203},"status":"passed","steps":[{"name":"步骤1===>> 获取验车数据，验车类型='0'","time":{"start":1743042800978,"stop":1743042800978,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"project_type","value":"'0'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"a21229802f828d0a","name":"接口响应结果","source":"a21229802f828d0a.json","type":"application/json","size":2125}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"stepsCount":1,"hasContent":true},{"name":"验证接口响应","time":{"start":1743042800992,"stop":1743042800992,"duration":0},"status":"broken","statusMessage":"AttributeError: 'ResultBase' object has no attribute 'error'\n","statusTrace":"  File \"/Users/yangfeng/Desktop/pytest/test-demo/testcases/test_get_car_check_project_list.py\", line 45, in test_get_car_check_project_list\n    assert result.success == except_result, f\"实际结果与预期不符: {result.error}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"229a227a367c7864","name":"log","source":"229a227a367c7864.txt","type":"text/plain","size":8203}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"stepsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"针对单个接口测试"},{"name":"story","value":"用例--获取验车项目列表"},{"name":"feature","value":"获取验车项目列表"},{"name":"severity","value":"normal"},{"name":"tag","value":"single"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_get_car_check_project_list"},{"name":"subSuite","value":"TestGetCarCheckProjectList"},{"name":"host","value":"yangfengs-MacBook-Pro.local"},{"name":"thread","value":"22437-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_get_car_check_project_list"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"except_code","value":"0"},{"name":"except_msg","value":"'获取成功'"},{"name":"except_result","value":"True"},{"name":"project_type","value":"'0'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["single"]},"source":"aa95125b7542d49f.json","parameterValues":["0","'获取成功'","True","'0'"]}